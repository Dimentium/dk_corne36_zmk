/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        mod {
            bindings = <&mo 3>;
            key-positions = <31 34>;
        };

        lock {
            bindings = <&kp LG(L)>;
            key-positions = <33 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q   &kp W   &kp E                      &kp R   &kp T                    &kp Y                &kp U      &kp I                  &kp O     &kp P
  &kp A   &kp S   &kp D                      &kp F   &kp G                    &kp H                &kp J      &kp K                  &kp L  &kp SEMI
  &kp Z   &kp X   &kp C                      &kp V   &kp B                    &kp N                &kp M  &kp COMMA                &kp DOT  &kp FSLH
                         &mt LEFT_SHIFT LC(LS(N1))   &mo 1  &mt LCTRL SPACE          &mt RIGHT_ALT ENTER      &mo 2  &mt RSHIFT LC(LS(N2))
            >;
        };

        ext {
            bindings = <
  &kp F1   &kp F2     &kp F3     &kp F4      &kp F5             &kp F6    &kp F7          &kp F8      &kp F9   &kp F10
  &kp N1   &kp N2     &kp N3     &kp N4      &kp N5             &kp N6    &kp N7          &kp N8      &kp N9    &kp N0
 &kp F11  &kp F12  &kp MINUS  &kp EQUAL  &kp ESCAPE          &kp GRAVE  &kp LBKT        &kp RBKT     &kp SQT  &kp BSLH
                                 &trans      &trans  &trans             &kp RALT  &kp RA(RSHIFT)  &kp LSHIFT
            >;
        };

        nav {
            bindings = <
 &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN        &kp C_VOL_UP   &kp C_MUTE          &kp PG_UP         &kp HOME         &kp END          &kp INS   &kp DEL
    &kp LCTRL     &kp LSHFT      &kp LGUI            &kp LALT    &kp K_APP           &kp LEFT         &kp DOWN          &kp UP        &kp RIGHT  &kp BSPC
     &kp CAPS      &kp C_RW      &kp C_PP  &kp C_FAST_FORWARD  &kp C_EJECT          &kp PG_DN  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK   &kp TAB
                                                       &trans       &trans  &trans                      &trans          &trans           &trans
            >;
        };

        mod {
            bindings = <
 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans    &trans    &trans      &trans     &trans
    &kp LCTRL    &kp LSHIFT      &kp LGUI      &kp LALT        &trans          &trans  &kp LALT  &kp RGUI  &kp RSHIFT  &kp RCTRL
   &bt BT_CLR    &bt BT_NXT    &bt BT_PRV  &out OUT_TOG  &out OUT_USB          &trans    &trans    &trans      &trans     &trans
                                                 &trans        &trans  &trans            &trans    &trans      &trans
            >;
        };
    };
};
